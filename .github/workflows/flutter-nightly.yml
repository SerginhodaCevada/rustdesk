name: Build and Upload RustDesk APK

on:
  push:
    branches:
      - SerginhodaCevada-patch-1
  workflow_dispatch:

jobs:
  build-rustdesk-android:
    name: Build RustDesk Android APK for aarch64
    runs-on: ubuntu-20.04

    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: false
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: false

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install Rust toolchain and cargo-ndk
        run: |
          rustup target add aarch64-linux-android
          cargo install cargo-ndk

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.5'

      - name: Build RustDesk library
        run: |
          rustup target add aarch64-linux-android
          cargo ndk --target aarch64-linux-android --platform 21 build --release
          mkdir -p ./flutter/android/app/src/main/jniLibs/arm64-v8a
          cp ./target/aarch64-linux-android/release/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/arm64-v8a/librustdesk.so

      - name: Upload RustDesk library to Artifacts
        uses: actions/upload-artifact@master
        with:
          name: librustdesk.so.aarch64-linux-android
          path: ./target/aarch64-linux-android/release/liblibrustdesk.so

      - name: Build Flutter APK
        shell: bash
        env:
          JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
        run: |
          export PATH=/usr/lib/jvm/java-11-openjdk-amd64/bin:$PATH
          sed -i "s/signingConfigs.release/signingConfigs.debug/g" ./flutter/android/app/build.gradle
          mkdir -p ./flutter/android/app/src/main/jniLibs/arm64-v8a
          cp ${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/aarch64-linux-android/libc++_shared.so ./flutter/android/app/src/main/jniLibs/arm64-v8a/
          cp ./target/aarch64-linux-android/release/liblibrustdesk.so ./flutter/android/app/src/main/jniLibs/arm64-v8a/librustdesk.so
          pushd flutter
          flutter build apk --release --target-platform android-arm64 --split-per-abi
          mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk ../rustdesk-${{ env.VERSION }}-aarch64.apk

      - name: Upload APK to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: rustdesk-${{ env.VERSION }}-aarch64.apk
          path: rustdesk-${{ env.VERSION }}-aarch64.apk

      - name: Upload signed APK package
        if: env.ANDROID_SIGNING_KEY != null && env.UPLOAD_ARTIFACT == 'true'
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: |
            ${{steps.sign-rustdesk.outputs.signedReleaseFile}}

      - name: Upload unsigned APK package
        if: env.ANDROID_SIGNING_KEY == null && env.UPLOAD_ARTIFACT == 'true'
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ env.TAG_NAME }}
          files: |
            rustdesk-${{ env.VERSION }}-aarch64.apk
